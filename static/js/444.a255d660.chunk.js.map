{"version":3,"file":"static/js/444.a255d660.chunk.js","mappings":"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","sources":["components/docPage/components/docsNavigation/docsNavigation.tsx","components/docPage/components/docsNavigation/index.tsx","components/loading/loading.tsx","components/loading/wrappedLoading.tsx","components/docPage/docPage.tsx","components/docPage/index.tsx","pages/Documents/documents.tsx","pages/Documents/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport MarkdownNavbar from 'markdown-navbar';\nimport 'markdown-navbar/dist/navbar.css';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface DocsNavigationProps {\n  article?: string;\n  style?: React.CSSProperties;\n}\n\nconst DosNavigationSection = styled.section``;\n\nconst DocsNavigation: React.FC<DocsNavigationProps> = (\n  props: DocsNavigationProps\n) => {\n  const { article = '', style = {} } = props;\n\n  return (\n    <DosNavigationSection style={style}>\n      <MarkdownNavbar source={article}></MarkdownNavbar>\n    </DosNavigationSection>\n  );\n};\n\nexport default DocsNavigation;\n","import DocsNavigation from './docsNavigation';\nexport default DocsNavigation;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { COLOR_PALETTE } from '../../const/theme';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface LoadingProps {\n  style?: React.CSSProperties;\n}\n\nconst LoadingSection = styled.section`\n  @keyframes square-spin {\n    25% {\n      transform: perspective(100px) rotateX(180deg) rotateY(0);\n    }\n    50% {\n      transform: perspective(100px) rotateX(180deg) rotateY(180deg);\n    }\n    75% {\n      transform: perspective(100px) rotateX(0) rotateY(180deg);\n    }\n    100% {\n      transform: perspective(100px) rotateX(0) rotateY(0);\n    }\n  }\n  animation-fill-mode: both;\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n  background: ${COLOR_PALETTE.LEETECHO_BLUE};\n  animation: square-spin 3s 0s cubic-bezier(0.09, 0.57, 0.49, 0.9) infinite;\n`;\n\nconst Loading: React.FC<LoadingProps> = (props: LoadingProps) => {\n  const { style = {} } = props;\n\n  return <LoadingSection style={style || {}} />;\n};\n\nexport default Loading;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport Loading from './loading';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface WrappedLoadingProps {\n  style?: React.CSSProperties;\n}\n\nconst WrappedLoading: React.FC<WrappedLoadingProps> = (props: WrappedLoadingProps) => {\n  const { style = {} } = props;\n\n  return (\n    <section style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', ...style }}>\n      <section style={{ display: 'flex' }}>\n        <Loading style={{ width: 45, height: 45 }}></Loading>\n      </section>\n    </section>\n  );\n};\n\nexport default WrappedLoading;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport Container from '../../common/Container';\nimport DocsNavigation from './components/docsNavigation';\nimport to from 'await-to-js';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Col, Row } from 'antd';\nimport { COLOR_PALETTE } from '../../const/theme';\n// import commonQuestions from '../../md/commonQuestions.md';\n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport WrappedLoading from '../../components/loading/wrappedLoading';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface DocPageProps {\n  importFunc: () => Promise<typeof import('*.md')>;\n}\n\nconst DocPage: React.FC<DocPageProps> = (props: DocPageProps) => {\n  const { importFunc } = props;\n\n  const [md, setMd] = useState('');\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getMd = async () => {\n    setIsLoading(true);\n    const [mdImportErr, mdImport] = await to(importFunc());\n\n    const [err, md] = await to(\n      fetch(mdImport?.default || '').then(res => res.text())\n    );\n\n    if (err || mdImportErr) {\n      setIsLoading(false);\n      console.error(err);\n      return '';\n    }\n    setIsLoading(false);\n    return md;\n  };\n\n  useEffect(() => {\n    getMd()\n      .then(md => {\n        setMd(md);\n      })\n      .catch(err => {\n        /** noop */\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container\n      style={{\n        paddingTop: '2rem',\n      }}\n    >\n      {isLoading ? (\n        <WrappedLoading style={{ height: '20rem' }}></WrappedLoading>\n      ) : (\n        <Row>\n          <Col\n            xs={20}\n            sm={5}\n            md={5}\n            lg={5}\n            xl={5}\n            style={{\n              marginLeft: '-1rem',\n              marginRight: '1.2rem',\n            }}\n          >\n            <DocsNavigation style={{}} article={md || ''}></DocsNavigation>\n          </Col>\n          <Col\n            xs={24}\n            sm={18}\n            md={18}\n            lg={18}\n            xl={18}\n            style={\n              {\n                // marginLeft: 'rem',\n              }\n            }\n          >\n            <ReactMarkdown\n              transformImageUri={uri => {\n                return uri.replace('../../public/', './');\n              }}\n              children={md || ''}\n              remarkPlugins={[remarkGfm]}\n              components={{\n                img: ({ node, ...props }) => (\n                  <img\n                    style={{ maxWidth: '100%' }}\n                    alt={props?.alt || ''}\n                    {...props}\n                  />\n                ),\n                code: ({ node, className, children, ...props }) => {\n                  const match = /language-(\\w+)/.exec(className || '');\n                  return match ? (\n                    <SyntaxHighlighter\n                      children={String(children).replace(/\\n$/, '')}\n                      style={solarizedlight}\n                      customStyle={{\n                        backgroundColor:\n                          COLOR_PALETTE.LEETECHO_INPUT_BACKGROUND,\n                      }}\n                      language={match[1]}\n                      PreTag=\"div\"\n                      {...props}\n                    />\n                  ) : (\n                    <code\n                      style={{\n                        backgroundColor:\n                          COLOR_PALETTE.LEETECHO_INPUT_BACKGROUND,\n                        padding: '0 0.6rem',\n                      }}\n                      {...props}\n                    >\n                      {children}\n                    </code>\n                  );\n                },\n              }}\n            ></ReactMarkdown>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default DocPage;\n","import DocPage from './docPage';\nexport default DocPage;","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport DocPage from '../../components/docPage';\nimport to from 'await-to-js';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface ChangelogProps {}\n\nconst Changelog: React.FC<ChangelogProps> = (props: ChangelogProps) => {\n  const {} = props;\n\n  return (\n    <>\n      <DocPage\n        importFunc={async () => {\n          const [err, md] = await to(import('../../md/getStarted.md'));\n          if (err) {\n            throw err;\n          }\n          return md;\n        }}\n      ></DocPage>\n    </>\n  );\n};\n\nexport default Changelog;\n","import Documents from './documents';\nexport default Documents;"],"names":["DosNavigationSection","React","props","article","style","source","LoadingSection","COLOR_PALETTE","display","justifyContent","alignItems","width","height","useState","useEffect","importFunc","md","setMd","isLoading","setIsLoading","getMd","to","mdImportErr","mdImport","fetch","default","then","res","text","err","console","error","catch","Container","paddingTop","xs","sm","lg","xl","marginLeft","marginRight","transformImageUri","uri","replace","children","remarkPlugins","remarkGfm","components","img","node","maxWidth","alt","code","className","match","exec","String","solarizedlight","customStyle","backgroundColor","language","PreTag","padding","Documents"],"sourceRoot":""}