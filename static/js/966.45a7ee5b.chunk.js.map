{"version":3,"file":"static/js/966.45a7ee5b.chunk.js","mappings":"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","sources":["components/loading/loading.tsx","components/loading/wrappedLoading.tsx","pages/Documents/components/docsNavigation/docsNavigation.tsx","pages/Documents/components/docsNavigation/index.tsx","pages/Documents/documents.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { COLOR_PALETTE } from '../../const/theme';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface LoadingProps {\n  style?: React.CSSProperties;\n}\n\nconst LoadingSection = styled.section`\n  @keyframes square-spin {\n    25% {\n      transform: perspective(100px) rotateX(180deg) rotateY(0);\n    }\n    50% {\n      transform: perspective(100px) rotateX(180deg) rotateY(180deg);\n    }\n    75% {\n      transform: perspective(100px) rotateX(0) rotateY(180deg);\n    }\n    100% {\n      transform: perspective(100px) rotateX(0) rotateY(0);\n    }\n  }\n  animation-fill-mode: both;\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n  background: ${COLOR_PALETTE.LEETECHO_BLUE};\n  animation: square-spin 3s 0s cubic-bezier(0.09, 0.57, 0.49, 0.9) infinite;\n`;\n\nconst Loading: React.FC<LoadingProps> = (props: LoadingProps) => {\n  const { style = {} } = props;\n\n  return <LoadingSection style={style || {}} />;\n};\n\nexport default Loading;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport Loading from './loading';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface WrappedLoadingProps {\n  style?: React.CSSProperties;\n}\n\nconst WrappedLoading: React.FC<WrappedLoadingProps> = (props: WrappedLoadingProps) => {\n  const { style = {} } = props;\n\n  return (\n    <section style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', ...style }}>\n      <section style={{ display: 'flex' }}>\n        <Loading style={{ width: 45, height: 45 }}></Loading>\n      </section>\n    </section>\n  );\n};\n\nexport default WrappedLoading;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport MarkdownNavbar from 'markdown-navbar';\nimport 'markdown-navbar/dist/navbar.css';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface DocsNavigationProps {\n  article?: string;\n  style?: React.CSSProperties;\n}\n\nconst DosNavigationSection = styled.section``;\n\nconst DocsNavigation: React.FC<DocsNavigationProps> = (\n  props: DocsNavigationProps\n) => {\n  const { article = '', style = {} } = props;\n\n  return (\n    <DosNavigationSection style={style}>\n      <MarkdownNavbar source={article}></MarkdownNavbar>\n    </DosNavigationSection>\n  );\n};\n\nexport default DocsNavigation;\n","import DocsNavigation from './docsNavigation';\nexport default DocsNavigation;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport Container from '../../common/Container';\nimport DocsNavigation from './components/docsNavigation';\nimport getStarted from '../../md/getStarted.md';\nimport to from 'await-to-js';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Col, Row } from 'antd';\nimport { COLOR_PALETTE } from '../../const/theme';\n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport WrappedLoading from '../../components/loading/wrappedLoading';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface DocumentsProps {}\n\nconst Documents: React.FC<DocumentsProps> = (props: DocumentsProps) => {\n  const {} = props;\n\n  const [md, setMd] = useState('');\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getMd = async (src: string) => {\n    setIsLoading(true);\n    const [err, md] = await to(fetch(src).then(res => res.text()));\n\n    if (err) {\n      setIsLoading(false);\n      console.error(err);\n      return '';\n    }\n    setIsLoading(false);\n    return md;\n  };\n\n  useEffect(() => {\n    getMd(getStarted)\n      .then(md => {\n        setMd(md);\n      })\n      .catch(err => {\n        /** noop */\n      });\n  }, []);\n\n  return (\n    <Container\n      style={{\n        paddingTop: '2rem',\n      }}\n    >\n      {isLoading ? (\n        <WrappedLoading style={{ height: '20rem' }}></WrappedLoading>\n      ) : (\n        <Row>\n          <Col\n            xs={20}\n            sm={5}\n            md={5}\n            lg={5}\n            xl={5}\n            style={{\n              marginLeft: '-1rem',\n              marginRight: '1.2rem',\n            }}\n          >\n            <DocsNavigation style={{}} article={md || ''}></DocsNavigation>\n          </Col>\n          <Col\n            xs={24}\n            sm={18}\n            md={18}\n            lg={18}\n            xl={18}\n            style={\n              {\n                // marginLeft: 'rem',\n              }\n            }\n          >\n            <ReactMarkdown\n              transformImageUri={uri => {\n                return uri.replace('../../public/', './');\n              }}\n              children={md || ''}\n              remarkPlugins={[remarkGfm]}\n              components={{\n                img: ({ node, ...props }) => (\n                  <img\n                    style={{ maxWidth: '100%' }}\n                    alt={props?.alt || ''}\n                    {...props}\n                  />\n                ),\n                code: ({ node, className, children, ...props }) => {\n                  const match = /language-(\\w+)/.exec(className || '');\n                  return match ? (\n                    <SyntaxHighlighter\n                      children={String(children).replace(/\\n$/, '')}\n                      style={solarizedlight}\n                      customStyle={{\n                        backgroundColor:\n                          COLOR_PALETTE.LEETECHO_INPUT_BACKGROUND,\n                      }}\n                      language={match[1]}\n                      PreTag=\"div\"\n                      {...props}\n                    />\n                  ) : (\n                    <code\n                      style={{\n                        backgroundColor:\n                          COLOR_PALETTE.LEETECHO_INPUT_BACKGROUND,\n                        padding: '0 0.6rem',\n                      }}\n                      {...props}\n                    >\n                      {children}\n                    </code>\n                  );\n                },\n              }}\n            ></ReactMarkdown>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default Documents;\n"],"names":["LoadingSection","React","COLOR_PALETTE","props","style","display","justifyContent","alignItems","width","height","DosNavigationSection","article","source","DocsNavigation","useState","useEffect","md","setMd","isLoading","setIsLoading","getMd","src","to","fetch","then","res","text","err","console","error","getStarted","catch","paddingTop","xs","sm","lg","xl","marginLeft","marginRight","transformImageUri","uri","replace","children","remarkPlugins","remarkGfm","components","img","node","maxWidth","alt","code","className","match","exec","String","solarizedlight","customStyle","backgroundColor","language","PreTag","padding"],"sourceRoot":""}