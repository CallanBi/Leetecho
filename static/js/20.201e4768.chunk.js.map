{"version":3,"file":"static/js/20.201e4768.chunk.js","mappings":"mMAGaA,GAAeC,EAAAA,EAAAA,IAAO,SAAPA,CAAH,ycACT,SAAAC,GAAC,OAAIA,EAAEC,OAASC,EAAAA,EAAAA,kBACrB,SAAAF,GAAC,OACRA,EAAEC,MAAQC,EAAAA,EAAAA,eAA+BA,EAAAA,EAAAA,kBAkBrB,SAAAF,GAAC,OAClB,OAADA,QAAC,IAADA,GAAAA,EAAGC,MACCC,EAAAA,EAAAA,cACAA,EAAAA,EAAAA,2B,SCxBGC,EAAS,SAAC,GAAD,IACpBF,EADoB,EACpBA,MACAG,EAFoB,EAEpBA,WACAC,EAHoB,EAGpBA,SACAC,EAJoB,EAIpBA,QAJoB,IAKpBC,MAAAA,OALoB,MAKZ,GALY,SAOpB,SAACT,EAAD,CACEG,MAAOA,EACPG,WAAYA,EACZE,QAASA,EACTC,MAAOA,EAJT,SAMGF,M,0CCfL,UAAeG,EAAf,S,2JCCaC,GAAsBV,EAAAA,EAAAA,IAAO,UAAPA,CAAH,4OAiBnBW,IAJUX,EAAAA,EAAAA,IAAO,IAAPA,CAAH,qDAIUA,EAAAA,EAAAA,IAAO,MAAPA,CAAH,sJASdY,GAAgBZ,EAAAA,EAAAA,IAAO,MAAPA,CAAH,8N,6BCyD1B,GAAea,EAAAA,EAAAA,IAAf,EAjEmB,SAAC,GAAsC,EAApCC,EAAqC,IAAlCC,EAAiC,EAAjCA,GACjBC,EAAW,SAACD,GACAE,SAASC,eAAeH,GAChCI,eAAe,CACrBC,SAAU,YAGd,OACE,SAACV,EAAD,WACE,SAAC,KAAD,CAAMW,UAAU,QAAhB,UACE,UAAC,IAAD,CAAKC,QAAQ,gBAAgBC,MAAM,SAASR,GAAIA,EAAhD,WACE,SAAC,IAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxC,UACE,UAACjB,EAAD,YACE,oBACEH,MAAO,CACLqB,aAAc,UAFlB,UAKE,SAACC,EAAA,EAAD,CAASC,IAAK,gBAAiBC,MAAM,SAASC,OAAO,QAEvD,gCACE,SAAC,UAAD,CAAkBC,MAAO,EAAzB,uPAIA,SAAC,cAAD,oVAGA,SAAC,cAAD,0NAKF,UAACtB,EAAD,YACE,SAACR,EAAA,EAAD,CACEC,YAAY,EACZH,MAAOC,EAAAA,EAAAA,cACPI,QAAS,WACPS,EAAS,aAJb,uCASA,SAACZ,EAAA,EAAD,CACEC,YAAY,EACZE,QAAS,WACPS,EAAS,gBAHb,+CAWN,SAAC,IAAD,CAAKQ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIpB,MAAO,CAClD2B,UAAW,QADb,UAGE,SAACL,EAAA,EAAD,CAASC,IAAK,oBAAqBC,MAAM,OAAOC,OAAO,kB,uECvElBG,EAAAA,OAAAA,EAAAA,SAAAA,EAAAA,UAAAA,EAAAA,QAcjD,UAVoC,SAACC,GAGnC,OAFA,OAAWA,IAGT,+BACE,SAAC,UAAD,CAActB,GAAG","sources":["common/Button/styles.ts","common/Button/index.tsx","pages/Home/content/intro/components/introBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","pages/Home/content/intro/components/introBlock/introBlock.tsx","pages/Home/content/intro/intro.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { COLOR_PALETTE } from '../../const/theme';\r\n\r\nexport const StyledButton = styled('button')<any>`\r\n  background: ${p => p.color || COLOR_PALETTE.LEETECHO_WHITE};\r\n  color: ${p =>\r\n    p.color ? COLOR_PALETTE.LEETECHO_WHITE : COLOR_PALETTE.LEETECHO_BLACK};\r\n  border: none;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: background 0.2s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    border: none;\r\n    background-color: ${p =>\r\n      p?.color\r\n        ? COLOR_PALETTE.LEETECHO_BLUE\r\n        : COLOR_PALETTE.LEETECHO_INPUT_HOVER_BG};\r\n  }\r\n`;\r\n","import { StyledButton } from './styles';\r\nimport { ButtonProps } from '../types';\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n  style = {},\r\n}: ButtonProps) => (\r\n  <StyledButton\r\n    color={color}\r\n    fixedWidth={fixedWidth}\r\n    onClick={onClick}\r\n    style={style}\r\n  >\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import IntroBlock from './introBlock';\nexport default IntroBlock;","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col, Typography } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport { Button } from '../../../../../../common/Button';\nimport { ContentBlockProps } from '../../../../../../components/ContentBlock/types';\nimport { Fade } from 'react-awesome-reveal';\nimport {\n  RightBlockContainer,\n  ContentWrapper,\n  ButtonWrapper,\n} from '../../../../../../components/ContentBlock/RightContentBlock/styles';\nimport { SvgIcon } from '../../../../../../common/SvgIcon';\n\nimport { COLOR_PALETTE } from '../../../../../../const/theme';\nimport { css } from '@emotion/react';\n\ntype IntroContentBlockProps = {\n  t?: any;\n  id: string;\n};\n\nconst RightBlock = ({ t, id }: IntroContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <RightBlockContainer>\n      <Fade direction=\"right\">\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\n          <Col xs={24} sm={24} md={24} lg={8} xl={8}>\n            <ContentWrapper>\n              <section\n                style={{\n                  marginBottom: '3.5rem',\n                }}\n              >\n                <SvgIcon src={'logo-text.svg'} width=\"220rem\" height=\"\" />\n              </section>\n              <section>\n                <Typography.Title level={2}>\n                  一款优雅、体验友好的自动生成 LeetCode\n                  题解和笔记并发布到代码托管平台的个人仓库的产品\n                </Typography.Title>\n                <Typography.Paragraph>\n                  编写自定义的封面和题目模板，将你的题解和代码上传至个人仓库，让你美妙的思路和代码在开源世界有一个展示的窗口。\n                </Typography.Paragraph>\n                <Typography.Paragraph>\n                  很有趣的一点是：如果每天都刷一道题，Leetecho 能够让你的 road\n                  map 保持全年绿色！\n                </Typography.Paragraph>\n              </section>\n              <ButtonWrapper>\n                <Button\n                  fixedWidth={true}\n                  color={COLOR_PALETTE.LEETECHO_BLUE}\n                  onClick={() => {\n                    scrollTo('download');\n                  }}\n                >\n                  前往下载\n                </Button>\n                <Button\n                  fixedWidth={true}\n                  onClick={() => {\n                    scrollTo('explanation');\n                  }}\n                >\n                  了解更多\n                </Button>\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n          <Col xs={24} sm={24} md={24} lg={15} xl={15} style={{\n            marginTop: '3rem',\n          }}>\n            <SvgIcon src={'allProblemBig.svg'} width=\"100%\" height=\"\" />\n          </Col>\n        </Row>\n      </Fade>\n    </RightBlockContainer>\n  );\n};\n\nexport default withTranslation()(RightBlock);\n","import * as React from 'react';\nimport styled from '@emotion/styled/macro';\nimport { css } from '@emotion/react/macro';\nimport ContentBlock from './components/introBlock';\nimport IntroContent from '../../../../content/IntroContent.json';\n\nconst { useRef, useState, useEffect, useMemo } = React;\n\ninterface IntroProps {}\n\nconst Intro: React.FC<IntroProps> = (props: IntroProps) => {\n  const {} = props;\n\n  return (\n    <>\n      <ContentBlock id=\"intro\" />\n    </>\n  );\n};\n\nexport default Intro;\n"],"names":["StyledButton","styled","p","color","COLOR_PALETTE","Button","fixedWidth","children","onClick","style","IntroBlock","RightBlockContainer","ContentWrapper","ButtonWrapper","withTranslation","t","id","scrollTo","document","getElementById","scrollIntoView","behavior","direction","justify","align","xs","sm","md","lg","xl","marginBottom","SvgIcon","src","width","height","level","marginTop","React","props"],"sourceRoot":""}